o<toolchange> sub
(print, o<toolchange>)

O001 if [#<_task> EQ 0]
  (debug, Task is null)
  o<toolchange> return [999]
O001 endif (this code eliminates tool missing error on load for multiple use tools)

;assign the tool numbers held in parameters to the pocket numbers
#1 = #5190
#2 = #5191
#3 = #5192
#4 = #5193
#5 = #5194
#6 = #5195
#7 = #5196
#8 = #5197
#9 = #5198
#10 = #5199
#11 = #5200
#12 = #5201

#<activate_programmable_coolant> = #13
#<horizontal_spindle_nozzle_dist> = #14
#<vertical_spindle_nozzle_dist> = #15
#<pc_angle_offset> = #16

;assign the variables passed by M6 to some parameters
#100 = #<selected_tool>
#110 = #<tool_in_spindle>
#120 = #<selected_pocket>

O10 if [#100 EQ #110] ; checks if tool in the spindle is same as requested
 o<toolchange> endsub [1]
M2
O10 endif

#<next_pocket> = 0 ; assigns 0 to the next pocket for a later check if the tool is found in the carousel
#<open_pocket> = 0

#15 = 12 ;assign test parameter the number of pockets in the carousel

O100 do
 	O110 if [#[5189 + #15] EQ #100] ; checks all pockets to see if it contains tool number requested as the new tool
		#<next_pocket> = #15 ; if tool is found in pocket, assigns the next pocket

	O110 endif

	O115 if [#[5189 + #15] EQ 0] ; checks if the pocket is empty, last pocket checked will be the lowest empty pocket number, for putting tool in spindle away.
		#<open_pocket> = #15

	O115 endif
  #15= [#15 - 1]
O100 while [#15 GT 0]

O120 if [#<next_pocket> EQ 0] ; if tool is not found, aborts and sends a message
    (abort, tool not in carousel)
O120 endif

;now we know which pocket the next tool is sitting in
;we need to know if we need to put a tool away
;or if there is not tool in the spindle

O180 IF [#110 GT 0] ; checks if there is a valid tool in the spindle
    	O190 if [#<open_pocket> EQ 0] ;If there is a tool in the spindle, checks if there is an open pocket
		(abort, carousel is full, cant put away tool in into carousel)
	O190 endif

	M10 P[#<open_pocket>] ; move carousel to an open pocket
    	M21 ; puts the tool in spindle away into the open pocket
    	(DEBUG, EVAL[vcp.getWidget{"dynatc"}.store_tool{#<open_pocket>, #110}])
      #30 = #<open_pocket>
	##30 = #110 ; save tool number in pocket
	#5231 = 0 ; empty tool in the spindle
O180 ENDIF

G90
G0 G53 Z0

O200 IF [#100 GT 0] ; selected tool is not tool0
    M10 P#<next_pocket> ;set the carousel to move to the right pocket for the selected tool
    M65 P1
    M64 P0
    M66 P1 L3 Q5 ;check carousel out position sensor
    O205 if [#5399 LT 0]
	 M65 P0 ; turn off the solonoid to send atc to tool change
      (abort, failed to send carousel home) ; abort if the 	sensor does not activate in 5 seconds
    O205 endif
    M65 P0

    (DEBUG, EVAL[vcp.getWidget{"dynatc"}.store_tool{#<next_pocket>, 0}])
    M22 ;Carousel out
    #25 = #<next_pocket>
    ##25 = 0 ; empty the pocket

    #5231 = #100 ;Set persistent variable to remember tool in spindle after power cycle

O200 Else

M65 P2 ; deactive drawbar
M65 P0 ; make sure ATC out solonoid is off
M64 P1 ; move carousel home

M66 P0 L3 Q4 ;check carousel in position sensor
   O210 if [#5399 LT 0]
	 M65 P1 ; turn off the solonoid to send atc home
      (abort, failed to send carousel home) ; abort if the 	sensor does not activate in 5 seconds
   O210 endif
M65 P1
O200 ENDIF

;assign the tool numbers in the pockets to the parameters
#5190= #1
#5191= #2
#5192= #3
#5193= #4
#5194= #5
#5195= #6
#5196= #7
#5197= #8
#5198= #9
#5199= #10
#5200= #11
#5201= #12

M61 Q#100

o<010> if [1 EQ 1]
  G43 H#100
o<010> endif

#<pc_tool_length> = #5403

#<tool_tip_position> = [[4] + [#<pc_tool_length>]]

#<coolant_abs_angle> = [ATAN[#<tool_tip_position>] / [8]]

#<coolant_final_angle> = [[#<coolant_abs_angle>] + [0]]

#1000 = #<coolant_final_angle>
(DEBUG, EVAL[vcp.getWidget{"coolant_final_angle"}.setValue{#1000}])

M68 E20 Q[#<coolant_final_angle>]

o<toolchange> endsub [1]

M2
